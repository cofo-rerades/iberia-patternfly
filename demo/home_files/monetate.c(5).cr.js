monetate.c.cr({"data": "// ////\n//\n// JS Action template for MNTTGF 1.3.3 - 12 Septiembre 2022\n// Template de acci\u00f3n javascript para utilizar con las MONETATE GLOBAL FUNCTIONS (MNTTGF)\n//\n// ////\n// Nueva funcionalidad:\n//  - Nuevos mensajes de \"warning\" para notificar el status de la experiencia.\n//  - Criticidad por defecto a debug\n//  - Parametrizaci\u00f3n por defecto log2GTM\n\n\n\n(function() {\n\n  var TESTNAME = \"T45c - IBOT EVA (ocultando globo de presentacion)\";\n  var ACTIONNAME = \"Variante A\";\n\n  try {\n\n    var t45c = {};\n\n    t45c.INTERSTICIAL_SLEEP = 30; // d\u00edas\n    t45c.localstorage_sleeper = \"mm_t45c_sleeper\";\n\n        // nivel de criticidad de los mensajes de consola\n    t45c.defaultLogLevel = \"debug\";\n    //Para dejar trazas en el DOM\n    //t45c.defaultLogLevel = \"info\";\n\n\n    //// bloque de espera de carga de las Monetate Global Functions (MNTTGF) y lanzamiento de la experiencia\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        t45c.MNTTGFTimeout = 10000; // timeout de carga de las MNTTGF\n        t45c.timeoutMNTTGF = false;\n\n        console.debug(new Date().toTimeString() + \" - [\" + TESTNAME + \"|\" + ACTIONNAME + \"] - waiting 4 MNTTGF to load...\");\n\n        // defino timeout de carga de la MNTTGF\n        t45c.timeoutTimer=setTimeout(function(){\n          t45c.timeoutMNTTGF=true;\n        },t45c.MNTTGFTimeout);\n\n\n        //bucle de espera de carga de las MNTTGF\n        (function wait4MNTTGF() {\n          if (window.mnttGF && typeof(init) !== \"undefined\") {\n            log2Con(\"MNTTGF detected!! :)\",t45c.defaultLogLevel);\n            init(); // Se lanza la experiencia\n          }\n          else if (t45c.timeoutMNTTGF) {\n            timestamp = new Date().toLocaleString();\n            texto = \"MNTTGF TIMEOUT!!!: No se ha cargado la experiencia MONETATE GLOBAL FUNCTIONS :(\";\n            aviso = timestamp + \" [\" + TESTNAME + \"|\" + ACTIONNAME + \"]:--> \" + texto;\n\n            console.error(aviso);\n\n            avisoHTML='<div><div>'+timestamp+'</div>'+'<div class=\"mnttgf_warning\"> [' + TESTNAME + '|' + ACTIONNAME + ']: ' + texto + '</div></div>';\n\n            // lo metemos en el DOM para que lo registre QM\n\n            if (document.getElementById(\"MNTT_LOGS\")==null) {\n              output_tealeaf = '<div data-nosnippet id=\"MNTT_LOGS\" class=\"mnttgf_logs\"></div>';\n              document.querySelector(\"body\").insertAdjacentHTML(\"beforeend\", output_tealeaf);\n            }\n\n            idText = mnttTrimText(TESTNAME + '_' + ACTIONNAME);\n\n            if (document.getElementById(idText) == null) {\n              output_tealeaf = '<div id=\"' + idText + '\" class=\"mnttgf_logs\"> Monetate log: [' + TESTNAME + '][' + ACTIONNAME + '] </div>';\n              document.getElementById(\"MNTT_LOGS\").insertAdjacentHTML(\"beforeend\", output_tealeaf);\n            }\n\n            document.getElementById(idText).insertAdjacentHTML(\"beforeend\",avisoHTML);\n\n          }\n          else { //seguimos a la espera\n            t45c.waitTimer=setTimeout(wait4MNTTGF,100);\n          }\n        })();\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n    //// Bloque de la experiencia\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        function init() {\n\n          mnttWhen({\n\n            //testName (No Test Name)\n            //variantName (No Variant Name)\n            //actionCondition (trueFn)\n            //actionCallback (trueFn)\n            //stopCondition (falseFn)\n            //stopCallback (trueFn)\n            //timeoutExpiration (5000)\n            //timeoutCallback (trueFn)\n\n            testName: TESTNAME,\n            variantName: ACTIONNAME,\n            actionCondition: isDataLayerAndJQuery,\n            actionCallback: function() {\n              // define the Variants conditions here\n              ///////////////////////////////////////////////\n\n              // checkIdioma()\n              // .then(checkMercado)\n\n              // End Variants conditions\n              //////////////////////////\n\n              //Variant Render\n                renderVariant();\n            }\n          });\n        } // end init()\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /// Bloque functiones locales\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    // funcion DOM ready Condition\n    /////////////////////////////////\n\n      function isDataLayerAndJQuery() {\n        return (\n          window.jQuery &&\n          window.datalayer_general &&\n          document.querySelector(\"#root_ibot div[aria-labelledby='bubbleTitle']\") != null\n        );\n      } // end isDataLayerAndJQuery\n\n    // Variant conditions functions\n    ////////////////////////////////\n\n\n    // End funciones Variant conditions\n    ///////////////////////////////////\n\n    // Bloque funcion Variant Render\n    ////////////////////////////////////\n\n      function renderVariant() {\n\n        // Variant status definition\n        ////////////////////////////\n\n        // If at that point you are defining listener, observers, or other artifacts that doesn't change el original application behaviour,\n        // report now the experience status as \"OK - Waiting\" and include a status change to \"OK - Rendered\" in the listener/observer definition\n\n        //log2Con(\"OK - Waiting\",\"warning\");\n\n        // If you are modifing the original application behaviour, then report as \"OK - Rendered\"\n\n        log2Con(\"OK - Rendered\",\"warning\");\n        log2GTM();\n\n        // Your code here!!!\n        ///////////////////////////////\n\n        if (localStorage.getItem(t45c.localstorage_sleeper) == null || (Date.now() - localStorage.getItem(t45c.localstorage_sleeper)) / 1000 / 60 / 60 / 24 >= t45c.INTERSTICIAL_SLEEP) {\n\n          document.querySelector(\"#root_ibot div[aria-labelledby='bubbleTitle']\").classList.add(\"mm-t45c-on\");\n\n          document.querySelector(\"#root_ibot div[aria-labelledby='bubbleTitle'] > button\").addEventListener('click', function() {\n            log2Con(\"Close click, set sleeper 30 d\u00edas\",t45c.defaultLogLevel);\n            localStorage.setItem(t45c.localstorage_sleeper, Date.now());\n          });\n\n        }else{\n          log2Con(\"Sleeper activo, remove bubbleTitle\",t45c.defaultLogLevel);\n          // document.querySelector(\"#root_ibot div[aria-labelledby='bubbleTitle']\").remove();\n        }\n\n        ///////////////////////////////\n\n        log2Con(\"Fin de la variante\",t45c.defaultLogLevel);\n        }\n\n    // End funcion Variant Render\n    ////////////////////////////////////\n\n    /// End Bloque functiones locales\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  } catch (err) {\n    log2Con(\"ErrorName: \" + err.name, \"error\");\n    log2Con(\"ErrorDescription: \" + err.message, \"error\");\n    error2TL(err);\n  }\n\n\n    /////////////////////////////////////////////\n    ////////// funciones proxy para MNTTGF //////\n    /////////////////////////////////////////////\n\n    function log2Con(texto,criticidad) {\n        mnttLog2Con(TESTNAME,ACTIONNAME,texto,criticidad);\n    }\n\n    function obj2Con(objeto) {\n        mnttObj2Con(TESTNAME,ACTIONNAME,objeto);\n    }\n\n    function log2GTM(test = TESTNAME, action = ACTIONNAME) {\n        mnttLog2GTM(test,action);\n    }\n\n    function log2TL() {\n        mnttLog2TL(TESTNAME,ACTIONNAME);\n    }\n\n    function error2TL(Error) {\n      mnttError2TL(TESTNAME,ACTIONNAME,Error);\n    }\n\n/////////////////////////////////////////\n\n})();\n//# sourceURL=t45c---ibot-eva-(ocultando-globo-de-presentacion).js\n", "ref": "1123/4991325.js"});