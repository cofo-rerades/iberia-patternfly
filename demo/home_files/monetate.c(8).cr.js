monetate.c.cr({"data": "  // ////\n  //\n  // JS Action template for MNTTGF 2.0 - 6 febrero 2023\n  // Template de acci\u00f3n javascript para utilizar con las MONETATE GLOBAL FUNCTIONS (MNTTGF) basado en promesas de js\n  //\n  // ////\n  // Nueva funcionalidad:\n  //  - refactorizaci\u00f3n de promesas solo js\n\n  //# sourceURL=t150-loading-time-log-leftbefore.js\n\n\n\n  (function() {\n\n\n    var testName = \"T150 - Loading time log (leftbefore)\";\n    var variantName = \"Variante A\";\n    var t150 = {};\n\n    try {\n    //Carga de configuraci\u00f3n\n    configLoad();\n\n    //Validamos que estan las MNTTGFs\n    wait4MNTTGF()\n    //Si es as\u00ed procedemos con la Variante y si no registramos el problema con MNTTGF\n    .then(processVariant,falloMNTTGFLoad);\n\n    } catch (err)\n    {\n        log2Con(err.toString(), \"error\");\n    }\n\n    //-----------------------------------------\n    // CONFIGURACION DE LA VARIANTE\n    //-----------------------------------------\n\n    function configLoad() {\n\n      //log2Con(\"Cargando configuraci\u00f3n...\",\"debug\");\n\n      // nivel de criticidad de los mensajes de consola\n      t150.defaultLogLevel = \"debug\";\n      //Para dejar trazas en el DOM\n      // t150.defaultLogLevel = \"info\";\n    }\n\n    //-----------------------------------------\n    // FILTROS Y PROCESADO DE LA VARIANTE\n    //-----------------------------------------\n\n    function processVariant () {\n\n      //Filtros de la Experiencia\n      checkPageReady()\n      // .then(respuesta => checkTarget(t150.targetMercado,datalayer_general.mercado,\"Mercado\"))\n      // .then(respuesta => checkConditions(EsVueloMadCool))\n      // .then(respuesta => checkTarget(t150.targetIdioma,datalayer_general.idioma,\"Idioma\"))\n\n      //Lanzamos la Experiencia\n      .then(respuesta => renderVariant())\n\n      //Control de errores: captura y traza\n      .catch(err => {\n          log2Con(\"Error!!! \" + err.toString(), \"error\");\n        });\n\n    }\n\n    /// functiones de propias de la variante\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    function renderVariant() {\n\n      // Variant status definition\n      ////////////////////////////\n\n      // If at that point you are defining listener, observers, or other artifacts that doesn't change el original application behaviour,\n      // report now the experience status as \"OK - Waiting\" and include a status change to \"OK - Rendered\" in the listener/observer definition\n\n      //log2Con(\"OK - Waiting\",\"warning\");\n\n      // If you are modifing the original application behaviour, then report as \"OK - Rendered\"\n\n      log2Con(\"OK - Rendered\",\"warning\");\n      log2GTM();\n\n      // Your code here!!!\n      ///////////////////////////////\n\n      if(window.localStorage.getItem(\"mntt:t150:leftbefore\") != null){\n\n        var obj = JSON.parse(window.localStorage.getItem(\"mntt:t150:leftbefore\"));\n\n        var origin =  obj.quadrigamOrigen;\n        var time = obj.tiempoFin - obj.tiempoInicio;\n        var QMSessionReplay = obj.QMSessionReplay;\n        var eQM = 546;\n        var transiName=\"\";\n\n        if (time <= 60000) {\n          if(origin == \"INITIAL\"){\n            eQM = 546;\n            transiName=\"InitialADispo\";\n          }else if(origin == \"IBOWFS\" || origin == \"PAFARE\" || origin == \"MTVAIL\" || origin == \"HMVAIL\"){\n            eQM = 547;\n            transiName=\"DispoAPasajeros\";\n          }else if(origin == \"IBAIRP\" || origin == \"PAAIRP\" || origin == \"MTAIRP\" || origin == \"HMAIRP\"){\n            eQM = 548;\n            transiName=\"PasajerosAAncillaries/Pago\";\n          }else if(origin == \"IBCMTV\" || origin == \"HMCMTV\"){\n            eQM = 549;\n            transiName=\"AncillariesAPago\";\n          }else if(origin == \"IBPURC\" || origin == \"PAPURC\" || origin == \"MTPURC\" || origin == \"HMPURC\"){\n            eQM = 550;\n            transiName=\"PagoAConfirmacion\";\n          }\n\n          //Eviamos eventos con el tiempo a QM y GA\n          sendEventQM(eQM, time);\n          log2GTM(testName,\"AbandonoTransicion\"+transiName,time);\n\n          log2Con(\"Enlace sesi\u00f3n abandono: \" + QMSessionReplay,\"warning\");\n          \n          log2Con(\"Detectado abandono en \" + origin + \", notificaci\u00f3n a QM \" + eQM + \" = \" + time, t150.defaultLogLevel);\n\n        } else {\n          log2Con(\"Tiempo de espera mayor que el error de transici\u00f3n. No se reporta.\");\n        }\n        \n        window.localStorage.removeItem(\"mntt:t150:leftbefore\");\n\n      }else{\n        log2Con(\"No hay abandono previo\", t150.defaultLogLevel);\n      }\n\n      ///////////////////////////////\n\n      log2Con(\"Fin de la variante\",\"info\");\n    }\n\n    /// functiones core del template\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n    function wait4MNTTGF() {\n      return new Promise(function(resolve,reject) {\n\n        console.debug(new Date().toLocaleString(\"es-ES\",{timeZoneName:\"short\"}) + \" - [\" + testName + \"|\" + variantName + \"] - waiting 4 MNTTGF to load...\");\n\n        //Evaluamos si las MNTTGF se han cargado cada 100 milisegundos y si es as\u00ed resolvemos la promesa\n        setTimeout(() => {\n          const intervalMNTTGF = setInterval(function() {\n            if (window.mnttGF) {\n              log2Con(\"MNTTGF running!! :)\",\"info\");\n              clearInterval(intervalMNTTGF);\n              clearTimeout(timeoutMGTTGF);\n              resolve();\n            } else if (window.mnttGF==\"locked\") {\n              log2Con(\"ATTENTION!!!! MNTTGF LOCKED!!!!!!!!!!!!!!!!!!!!!!!!! :(\",\"warning\");\n              clearInterval(intervalMNTTGF);\n              clearTimeout(timeoutMGTTGF);\n              resolve();\n            } else if (window.mnttGF==\"loading\") {\n              log2Con(\"loading MNTTGF... :|\",\"info\");\n            }\n          },100);\n\n          //Si tras 10 segundos no se han cargado las MNTTGF rechazamos la promesa\n          const timeoutMGTTGF = setTimeout(() => {\n            clearInterval(intervalMNTTGF);\n            reject();\n          },10000);\n        },0);\n\n\n      });\n    }\n\n    function falloMNTTGFLoad() {\n      timestamp = new Date().toLocaleString(\"es-ES\",{timeZoneName:\"short\"});\n      texto = \"MNTTGF TIMEOUT!!!: No se ha cargado la experiencia MONETATE GLOBAL FUNCTIONS :(\";\n      aviso = timestamp + \" [\" + testName + \"|\" + variantName + \"]:--> \" + texto;\n\n      console.error(aviso);\n\n      avisoHTML='<div class=\"mnttgf_error\">' + timestamp + ': ' + texto + '</div>';\n\n      // lo metemos en el DOM para que lo registre QM\n\n      if (document.getElementById(\"MNTT_LOGS\")==null) {\n        output = '<div data-nosnippet id=\"MNTT_LOGS\" class=\"mnttgf_logs\" style=\"display: none;\"></div>';\n        document.querySelector(\"body\").insertAdjacentHTML(\"beforeend\", output);\n      }\n\n      idText = (testName + '_' + variantName).trim();\n\n      if (document.getElementById(idText) == null) {\n        output = '<div id=\"' + idText + '\" class=\"mnttgf_logs\" style=\"display: none;\">Monetate log: [' + testName + '][' + variantName + '] </div>';\n        document.getElementById(\"MNTT_LOGS\").insertAdjacentHTML(\"beforeend\", output);\n      }\n\n      document.getElementById(idText).insertAdjacentHTML(\"beforeend\",avisoHTML);\n    }\n\n\n\n    /// funciones proxy para MNTTGF\n    /////////////////////////////////////////////\n\n    function checkPageReady(pageCondition = function() {return true;}){\n      return mnttCheckPageReady(testName,variantName,pageCondition);\n    }\n\n    function checkConditions(funcionCondicion,conditionDescription = \"\") {\n      return mnttCheckConditions(testName,variantName,funcionCondicion,conditionDescription);\n    }\n\n    function checkTarget(target,currentValue,targetDescription = \"\") {\n      return mnttCheckTarget(testName,variantName,target,currentValue,targetDescription);\n    }\n\n    function log2Con(texto,criticidad = \"info\") {\n        mnttLog2Con(testName,variantName,texto,criticidad);\n    }\n\n    function obj2Con(objeto) {\n        mnttObj2Con(testName,variantName,objeto);\n    }\n\n    function log2GTM(test = testName, action = variantName, valor=\"\") {\n        mnttLog2GTM(test,action,valor);\n    }\n\n    function sendEventQM(eventNum,eventValue = \"\",eventDesc=\"\")\n    {\n        mnttSendEventQM(testName,variantName,eventNum,eventValue,eventDesc);\n    }\n\n    /////////////////////////////////////////\n\n  })();\n\n", "ref": "1123/5222877.js"});