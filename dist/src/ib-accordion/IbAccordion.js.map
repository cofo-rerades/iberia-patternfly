{"version":3,"file":"IbAccordion.js","sourceRoot":"","sources":["../../../src/ib-accordion/IbAccordion.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,mDAAmD,CAAC;AAEhF,MAAM,OAAO,WAAY,SAAQ,WAAW;IAC1C;QACE,KAAK,EAAE,CAAC;QACR,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAChD,MAAM,KAAK,GAAG,IAAI,aAAa,EAAE,CAAC;QAClC,KAAK,CAAC,WAAW,CAAC;;;;;;;;;;QAUd,CAAC,CAAC;QACN,2CAA2C;QAC3C,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAG;gBACnC,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB;gBACrC,KAAK;aACN,CAAC;QACJ,CAAC;IACH,CAAC;IAED,MAAM,KAAK,kBAAkB;QAC3B,OAAO,CAAC,GAAG,WAAW,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,CAAC;IACjE,CAAC;IAED,wBAAwB,CAAC,IAAY,EAAE,QAAgB,EAAE,QAAgB;QACvE,KAAK,CAAC,wBAAwB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACzD,IAAI,IAAI,KAAK,kBAAkB,EAAE,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,6BAA6B,QAAQ,OAAO,QAAQ,EAAE,CAAC,CAAC;QACtE,CAAC;IACH,CAAC;CACF","sourcesContent":["import { PfAccordion } from '@patternfly/elements/pf-accordion/pf-accordion.js';\n\nexport class IbAccordion extends PfAccordion {\n  constructor() {\n    super();\n    console.log('IbAccordion initialized');\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    console.log('IbAccordion connected to the DOM');\n    const style = new CSSStyleSheet();\n    style.replaceSync(`\n      :host {\n        --pf-global--primary-color--100: #991212;\n        --pf-global--link--Color:#991212;\n        --pf-c-accordion__toggle--expanded-icon--Rotate:180deg;\n        --pf-c-accordion__toggle--IconSize:24px;\n        --pf-c-accordion--m-display-lg__toggle--FontSize:0.5rem;\n        --pf-c-accordion__toggle--expanded--before--BackgroundColor: transparent;\n        --pf-c-accordion__panel--content-body--before--BackgroundColor: transparent;\n\n      }`);\n    // Add CSS variables via adoptedStyleSheets\n    if (this.shadowRoot) {\n      this.shadowRoot.adoptedStyleSheets = [\n        ...this.shadowRoot.adoptedStyleSheets,\n        style,\n      ];\n    }\n  }\n\n  static get observedAttributes() {\n    return [...PfAccordion.observedAttributes, 'custom-attribute'];\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name === 'custom-attribute') {\n      console.log(`Custom attribute changed: ${oldValue} -> ${newValue}`);\n    }\n  }\n}\n"]}